Step 1:In first for loop, traverse the array from the nums.length-2 to start to find the first decreasing element from the right.(If any of the element had not been found means, just reverse the loop and exit the program.)

Step 2:In second for loop, traverse the array from the end to find the pivot point to check the element that is just bigger than pivot value
Step 3:Swap the two elements (pivot elem & just bigger than pivot elem)

Step 4:Just reverse the array from pivot elem to end;


class Solution {
    public void nextPermutation(int[] nums) {
        int n=nums.length;
        int idx=-1;
        if(nums.length==0 || nums==null)
			return;
        
        for(int i=n-2;i>=0;i--){
            if(nums[i]<nums[i+1]){
                idx=i;
                break;
            }
        }
        
        if(idx==-1){
            reverse(nums,0,n-1);
            return;
        }
        for(int i=n-1;i>idx;i--){
            if(nums[idx]<nums[i]){
                int temp =nums[i];
                nums[i]=nums[idx];
                nums[idx]=temp;
                break;
            }
        }
        reverse(nums,idx+1,n-1);
    }
    
    public void reverse(int nums[], int st,int end){
        while(st<end){
            int temp = nums[st];
            nums[st]=nums[end];
            nums[end]=temp;
            st++;
            end--;
        }
    }
}
