class Solution {
    public int shipWithinDays(int[] weights, int days) {
        int low=weights[0];
        int high=weights[0];
        int res=0;
        for(int i=1;i<weights.length;i++){
            low=Math.max(low,weights[i]);
            high+=weights[i];
        }
        while(low<=high){
            int mid = low+(high-low)/2;
            if(helper(weights,mid,days)){
                res=mid;
                high=mid-1;
            }else{
                low=mid+1;
            } 
        }
        return res;
    }
        
    boolean helper(int[] weights, int mid, int days){
        int currDays=1;
        int currWeights=0;
        for(int i=0;i<weights.length;i++){
            currWeights+=weights[i];
            if(currWeights>mid){
                currDays++;
                currWeights=weights[i];
            }
        }
        return currDays<=days;
    }
}
