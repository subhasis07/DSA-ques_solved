class Solution {
    public int minDays(int[] bloomDay, int m, int k) {
        int low=bloomDay[0];
        int high=bloomDay[0];
        
        for(int i=1;i<bloomDay.length;i++){
            low=Math.min(low,bloomDay[i]);
            high=Math.max(high,bloomDay[i]);
        }
        int res=-1;
        long val=(long)m*k;
        if(val>bloomDay.length){
            return -1;
        }
        
        while(low<=high){
            int mid= low+(high-low)/2;
            
            if(helper(bloomDay,m,k,mid)){
                res=mid;
                high=mid-1;
            }else{
                low=mid+1;
            }
        }
        return res;
    }
    
    boolean helper(int[] bloomDay, int m, int k, int mid){
        int cnt=0;
        int bouquets=0;
        for(int i=0;i<bloomDay.length;i++){
            if(bloomDay[i]<=mid){
                cnt++;
            }else{
                bouquets+=cnt/k;
                cnt=0;
            }
            
        }
        bouquets+=cnt/k;
        return bouquets>=m;
    }
}
