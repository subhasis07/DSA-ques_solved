class Solution {
    public int minEatingSpeed(int[] piles, int h) {
        int low=1;
        int high=piles[0];
        for(int i=0;i<piles.length;i++){
            high=Math.max(high,piles[i]);
        }
        int res=-1;
        while(low<=high){
            int mid= low+(high-low)/2;
            if(helper(piles,mid,h)){
                res=mid;
                high=mid-1;
            }else{
                low=mid+1;
            }
        }
        return res;
    }
    
    boolean helper(int[] piles, int mid, int h){
        int timeTaken=0;
        for(int i=0;i<piles.length;i++){
            timeTaken+=piles[i]/mid;
            
            if(piles[i]%mid!=0){
                timeTaken+=1;
            }
            if(timeTaken>h){
                return false;
            }
        }
        return true;
    }
}
