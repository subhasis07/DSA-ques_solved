class Solution {
    public int largestRectangleArea(int[] heights) {
        Stack<Integer> stack = new Stack<>();
        int n= heights.length;
        //nse
        int nse[]= new int[n];
        // nse[n-1]=n;
        for(int i=n-1;i>=0;i--){
            while(!stack.isEmpty() && heights[stack.peek()]>=heights[i]){
                stack.pop();
            }
            if(stack.size()==0){
                nse[i]=n;
            }else{
                nse[i]=stack.peek();
            }
            stack.push(i);
        }
        
        while(!stack.isEmpty()){
            stack.pop();
        }
        
        //pse
        
        int pse[]= new int[n];
        for(int i=0;i<n;i++){
            while(!stack.isEmpty() && heights[stack.peek()]>=heights[i]){
                stack.pop();
            }
            if(stack.isEmpty()){
                pse[i]=-1;
            }else{
                pse[i]=stack.peek();
            }
            stack.push(i);
        }
        
        int area=-1;
        for(int i=0;i<n;i++){
            int currArea=heights[i]*(nse[i]-pse[i]-1);
            area=Math.max(area,currArea);
        }
        
        return area;
    }
}
