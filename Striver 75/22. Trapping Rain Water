class Solution {
    public int trap(int[] height) {
        int maxLeft[]= new int[height.length];
        int maxRight[]= new int[height.length];
        
        maxLeft[0]=height[0];
        for(int i=1;i<height.length;i++){
            maxLeft[i]=Math.max(height[i],maxLeft[i-1]);
        }
        maxRight[height.length-1]=height[height.length-1];
        for(int i=height.length-2;i>=0;i--){
            maxRight[i]=Math.max(height[i],maxRight[i+1]);
        }
        int ans=0;
        int res[]= new int[height.length];
        for(int i=0;i<res.length;i++){
            res[i]=Math.min(maxLeft[i],maxRight[i])-height[i];
            ans+=res[i];
        }
        return ans;
    }
}
