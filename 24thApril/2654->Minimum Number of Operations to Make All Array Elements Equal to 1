Link: https://leetcode.com/problems/minimum-number-of-operations-to-make-all-array-elements-equal-to-1/

if any elem of the arr =1; so we can easily make the full arr of 1---> operation requires= nums.length-(noOfOnesInTheArray)
else, we have to try to make one elem 1
we take range so that & perform gcd there... 
if we create 1...in the range [m,n] so.. total op to make full arr 1:-  (n-m)+(nums.length-1)


====
class Solution {
    public int minOperations(int[] nums) {
        int ones=0;
        for(int i=0;i<nums.length;i++){
            if(nums[i]==1){
                ones++;
            }
        }
        if(ones>0){
            return nums.length-ones;
        }
        int res = Integer.MAX_VALUE;
        for(int i=0;i<nums.length-1;i++){
            int targetVal=nums[i];
            for(int j=i+1;j<nums.length;j++){
                targetVal= gcd(targetVal,nums[j]);
                
                if(targetVal==1){
                    res=Math.min(res,j-i);
                }
            }
        }
        
        if(res == Integer.MAX_VALUE){
            return -1;
        }
        
        return res+(nums.length-1);
    }
    
    private int gcd(int a, int b){
        if(a==0){
            return b;
        }
        return gcd(b%a,a);
    }
}
