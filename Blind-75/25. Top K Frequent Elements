//ref: https://leetcode.com/problems/top-k-frequent-elements/discuss/1927648/One-OF-THE-best-EXPLANATION
//method---1

class Solution {
    public int[] topKFrequent(int[] nums, int k) {
        int[] res = new int[k];
        
        HashMap<Integer, Integer> map = new HashMap<>();
        for(int i=0;i<nums.length;i++){
            map.put(nums[i],map.getOrDefault(nums[i],0)+1);
        }
        
        PriorityQueue<Integer> pq = new PriorityQueue<>((a,b)->map.get(b)-map.get(a));
        
        for(int key:map.keySet()){
            pq.add(key);
        }
        
        for(int i=0;i<k;i++){
            res[i]=pq.remove();
        }
        
        return res;
    }
}


//method-2
