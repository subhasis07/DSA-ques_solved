/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        if(lists==null || lists.length==0){
            return null;
        }
        for(int i=1;i<lists.length;i++){
            lists[0]=mergeTwoList(lists[0],lists[i]);
        }
        return lists[0];
    }
    public ListNode mergeTwoList(ListNode list1, ListNode list2){
        if(list1==null && list2==null){
            return null;
        }
        ListNode res= new ListNode(0);
        ListNode temp= res;
        while(list1!=null && list2!=null){
            if(list1.val<list2.val){
                temp.next=list1;
                list1=list1.next;
            }else{
                temp.next=list2;
                list2=list2.next;
            }
            temp=temp.next;
        }
        
        if(list1!=null){
            temp.next=list1;
            list1=list1.next;
        }
        if(list2!=null){
            temp.next=list2;
            list2=list2.next;
        }
        
        return res.next;
    }
}
